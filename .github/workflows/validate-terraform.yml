name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Check terraform script
      - name: Validate terraform scripts
        run: |
          cd ${{ github.workspace }}/terraform/Provision-VNet-Infrastructure
          terraform init
          terraform validate
        env:
          ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.TENANT_ID }}

      - name: Install terraform compliance
        run: |
          pip install terraform-compliance

      - name: Run terraform compliance tests
        run: |
          cd ${{ github.workspace }}/terraform/Provision-VNet-Infrastructure
          terraform plan -out=plan.tfplan -var='enable_vnet=true'
          terraform show --json plan.tfplan > plan.tfplan.json
          terraform-compliance -p plan.tfplan.json -f ${{ github.workspace }}/terraform/features/
        env:
          ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
